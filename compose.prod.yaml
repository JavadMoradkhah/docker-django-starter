services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile.prod
    restart: on-failure
    expose:
      - 8000
    networks:
      - app-network
    secrets:
      - db-password
    env_file: ./web/.env.prod
    environment:
      DB_PASSWORD_FILE: /run/secrets/db-password
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16.1-alpine3.19
    restart: always
    env_file: ./web/.env.prod
    secrets:
      - db-password
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network
    expose:
      - 5432
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - app-network

  nginx:
    image: nginx:1.25.3
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - 1337:80
    depends_on:
      - web
    networks:
      - app-network

volumes:
  db-data:
  static_volume:
  media_volume:

networks:
  app-network:

secrets:
  db-password:
    file: ./secrets/db/password.txt
